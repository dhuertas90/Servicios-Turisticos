Object subclass: #Avion	instanceVariableNames: 'tipoAvion codigo mapaAsientos'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Avion methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:36'!codigo	^ codigo! !!Avion methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:36'!tipoAvion	^ tipoAvion! !!Avion methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:36'!codigo: anObject	codigo := anObject! !!Avion methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:36'!tipoAvion: anObject	tipoAvion := anObject! !!Avion methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:36'!mapaAsientos: anObject	mapaAsientos := anObject! !!Avion methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:36'!mapaAsientos	^ mapaAsientos! !Object subclass: #Buscador	instanceVariableNames: 'resultados'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Buscador methodsFor: 'accessing' stamp: 'SimonGotta 10/2/2016 19:19'!initialize	resultados := OrderedCollection new! !!Buscador methodsFor: 'accessing' stamp: 'SimonGotta 10/2/2016 19:17'!resultados: anObject	resultados := anObject! !!Buscador methodsFor: 'accessing' stamp: 'SimonGotta 10/2/2016 19:17'!resultados	^ resultados! !Buscador subclass: #BuscadorAutos	instanceVariableNames: ''	classVariableNames: 'pais'	poolDictionaries: ''	category: 'Servicios-Turisticos'!!BuscadorAutos methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/4/2016 01:04'!buscarAutoEn: nombreCiudad desde: fechaInicio hasta: fechaFin"Busca un auto disponible en una ciudad, para las fechas correspondientes."	| ciudad companias dias |	self resultados: Dictionary new.	dias := (fechaFin subtractDate: fechaInicio).		ciudad := pais buscarCiudad: nombreCiudad.	companias := ciudad companiasAutos select: [ :cA | ((cA buscarAutoDesde: fechaInicio hasta: fechaFin) isNotNil)].	" Actualizo el precio por dias pero no me parece bien modificar el costo de la habitación, pensar como simplificar y clarificar. "	companias do: [ :cA | cA autos do: [ :a | a costo: (a costoPorDias: dias) ]].		companias do: [ :cA | resultados at: cA nombre put: (cA buscarAutoDesde: fechaInicio hasta: fechaFin)].	"Transcript show: self resultados."	! !!BuscadorAutos methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/4/2016 00:53'!pais: unPais	pais := unPais. ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BuscadorAutos class	instanceVariableNames: ''!!BuscadorAutos class methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/4/2016 00:54'!enPais: unPais	^ self new pais: unPais	! !Buscador subclass: #BuscadorHoteles	instanceVariableNames: ''	classVariableNames: 'pais'	poolDictionaries: ''	category: 'Servicios-Turisticos'!!BuscadorHoteles methodsFor: 'as yet unclassified' stamp: 'dhuertas90 10/3/2016 18:02'!pais: unPais	pais := unPais! !!BuscadorHoteles methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/4/2016 01:18'!buscarHotelEn: nombreCiudad desde: fechaInicio hasta: fechaFin para: cantPersonas	"Busca un Hotel que tenga disponible habitaciones durante ese periodo de tiempo, para la cantidad de personas pedidas.Cada Hotel devuelve la opcion mas economica. Este metodo devulve un diccionario con los resultados."	| ciudad hoteles dias |	self resultados: Dictionary new.	dias := (fechaFin subtractDate: fechaInicio).		ciudad := pais buscarCiudad: nombreCiudad.	hoteles := ciudad hoteles select: [ :h | ((h buscarHabitacionPara: cantPersonas desde: fechaInicio hasta: fechaFin) isNotNil)].	" Actualizo el precio por dias pero no me parece bien modificar el costo de la habitación, pensar como simplificar y clarificar. "	hoteles do: [ :h | (h habitaciones first) costo: ((h habitaciones first) costoPorDias: dias) ].		hoteles do: [ :h | resultados at: h nombre put: (h buscarHabitacionPara: cantPersonas desde: fechaInicio hasta: fechaFin)].	"Transcript show: self resultados."	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BuscadorHoteles class	instanceVariableNames: ''!!BuscadorHoteles class methodsFor: 'as yet unclassified' stamp: 'dhuertas90 10/3/2016 18:01'!enPais: unPais	^ self new pais: unPais ! !TestCase subclass: #BuscadorHotelesTest	instanceVariableNames: 'coeficientes paris francia buscadorH novotel regina nh hab1 hab3 hab4'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!BuscadorHotelesTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 20:51'!setUp	" Paises - Ciudades "	francia := Pais newNombrePais: 'Francia'.	paris := Ciudad newNombre: 'Paris'.	francia agregarCiudad: paris.		" Hoteles - Habitaciones "	coeficientes := Dictionary new.	coeficientes at: 1 put: 0.75.	coeficientes at: 2 put: 0.85.	coeficientes at: 3 put: 0.9.	coeficientes at: 4 put: 1.		novotel := Hotel newNombre: 'Novotel' precio: 800 coeficientes: coeficientes. 	regina := Hotel newNombre: 'Regina' precio: 900 coeficientes: coeficientes.	nh := Hotel newNombre: 'NH' precio: 700 coeficientes: coeficientes.	hab1 := Habitacion newCapacidad: 1.	hab3 := Habitacion newCapacidad: 3.	hab4 := Habitacion newCapacidad: 4.	novotel agregarHabitacion: hab1.	novotel agregarHabitacion: hab3.	regina agregarHabitacion: hab4.	paris agregarHotel: novotel.	paris agregarHotel: regina.		buscadorH := BuscadorHoteles enPais: francia.! !!BuscadorHotelesTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 20:54'!testBuscarHotelEnDesdeHastaPara	buscadorH buscarHotelEn: 'Paris' desde: (Date newDay: 01 month: 06 year: 2016) hasta: (Date newDay: 08 month: 06 year: 2016) para: 1.		self assert: 1 equals: buscadorH resultados size. ! !Buscador subclass: #BuscadorVuelos	instanceVariableNames: 'estrategia'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!BuscadorVuelos methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:37'!estrategia	^ estrategia! !!BuscadorVuelos methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:37'!estrategia: anObject	estrategia := anObject! !Object subclass: #Carrito	instanceVariableNames: 'compras servicios'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Carrito methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 10:53'!eliminarServicio: unServicio	servicios remove: unServicio! !!Carrito methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:37'!compras	^ compras! !!Carrito methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:37'!servicios: anObject	servicios := anObject! !!Carrito methodsFor: 'accessing' stamp: 'SimonGotta 9/28/2016 22:58'!initialize	servicios := OrderedCollection new.	compras := 0.! !!Carrito methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 10:40'!agregarServicio: unServicio	servicios add: unServicio! !!Carrito methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/25/2016 13:21'!compras: unInteger	compras := unInteger! !!Carrito methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/25/2016 13:09'!servicios	^servicios! !Object subclass: #Ciudad	instanceVariableNames: 'nombre companiasAutos hoteles'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Ciudad methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:37'!hoteles: anObject	hoteles := anObject! !!Ciudad methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:37'!nombre	^ nombre! !!Ciudad methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:17'!agregarHotel: unHotel	hoteles add: unHotel ! !!Ciudad methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:37'!nombre: anObject	nombre := anObject! !!Ciudad methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:27'!agregarCompaniaAutos: unaCompania	companiasAutos add: unaCompania ! !!Ciudad methodsFor: 'accessing' stamp: 'dhuertas90 9/28/2016 21:32'!companiasAutos	^ companiasAutos! !!Ciudad methodsFor: 'accessing' stamp: 'dhuertas90 9/28/2016 21:32'!companiasAutos: anObject	companiasAutos := anObject! !!Ciudad methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:27'!initialize	hoteles := OrderedCollection new.	companiasAutos := OrderedCollection new.! !!Ciudad methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:37'!hoteles	^ hoteles! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Ciudad class	instanceVariableNames: ''!!Ciudad class methodsFor: 'as yet unclassified' stamp: 'SimonGotta 9/30/2016 09:19'!newNombre: aString	^ self new nombre: aString! !Object subclass: #CompaniaAutos	instanceVariableNames: 'nombre autos'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!CompaniaAutos methodsFor: 'accessing' stamp: 'dhuertas90 9/28/2016 21:31'!nombre: anObject	nombre := anObject! !!CompaniaAutos methodsFor: 'accessing' stamp: 'dhuertas90 9/28/2016 21:31'!autos	^ autos! !!CompaniaAutos methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:35'!agregarAuto: unAuto	autos add: unAuto ! !!CompaniaAutos methodsFor: 'accessing' stamp: 'SimonGotta 10/4/2016 01:07'!buscarAutoDesde: fechaInicio hasta: fechaFin		| dias unAuto |		dias := (fechaFin subtractDate: fechaInicio).		" Hay un solo tipo de auto, así que retorna el primero que encuentre libre. "	unAuto := self autos detect: [ :a | a estadoActual = 'Libre'].		^ unAuto.! !!CompaniaAutos methodsFor: 'accessing' stamp: 'dhuertas90 9/28/2016 21:31'!autos: anObject	autos := anObject! !!CompaniaAutos methodsFor: 'accessing' stamp: 'dhuertas90 9/28/2016 21:31'!nombre	^ nombre! !!CompaniaAutos methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:30'!initialize	autos := OrderedCollection new! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CompaniaAutos class	instanceVariableNames: ''!!CompaniaAutos class methodsFor: 'as yet unclassified' stamp: 'SimonGotta 9/30/2016 09:29'!newNombre: aString	^ self new nombre: aString! !TestCase subclass: #CompaniaAutosTest	instanceVariableNames: 'avis europcar autoAvis autoEuropcar'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!CompaniaAutosTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 18:58'!setUp	avis := CompaniaAutos newNombre: 'Avis'.	autoAvis := Auto newPrecio: 1000.	avis agregarAuto: autoAvis.		europcar := CompaniaAutos newNombre: 'Europcar'.	autoEuropcar := Auto newPrecio: 800.	europcar agregarAuto: autoEuropcar.! !!CompaniaAutosTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 18:57'!testBuscarAutoDesdeHasta		| unAuto |		unAuto := avis buscarAutoDesde: (Date newDay: 01 month: 06 year: 2016) hasta: (Date newDay: 08 month: 06 year: 2016).	self assert: 7000 equals: unAuto precio.		unAuto := europcar buscarAutoDesde: (Date newDay: 01 month: 06 year: 2016) hasta: (Date newDay: 08 month: 06 year: 2016).	self assert: 5600 equals: unAuto precio.! !Object subclass: #Estado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Estado methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/26/2016 16:32'!miEstado	self subclassResponsibility ! !Estado subclass: #Comprado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Comprado methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/26/2016 16:33'!miEstado	^'Comprado'! !Object subclass: #Hotel	instanceVariableNames: 'nombre precio coeficientes habitaciones'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Hotel methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!precio	^ precio! !!Hotel methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!nombre: anObject	nombre := anObject! !!Hotel methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!nombre	^ nombre! !!Hotel methodsFor: 'accessing' stamp: 'SimonGotta 9/29/2016 02:14'!coeficientes	^ coeficientes! !!Hotel methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:06'!initialize	habitaciones := OrderedCollection new.! !!Hotel methodsFor: 'accessing' stamp: 'SimonGotta 10/2/2016 14:50'!ordenarPorMenorCosto: unaColeccionDeHabitaciones		^ unaColeccionDeHabitaciones asSortedCollection: [ :hab1 :hab2 | (hab1 costo) <= (hab2 costo) ].! !!Hotel methodsFor: 'accessing' stamp: 'SimonGotta 10/3/2016 23:56'!agregarHabitacion: unaHabitacion	" Calcula el precio de la habitación y luego la agrega. "	unaHabitacion costo: (self coeficientes at: (unaHabitacion capacidad)) * self precio.	habitaciones add: unaHabitacion! !!Hotel methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!precio: anObject	precio := anObject! !!Hotel methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!habitaciones	^ habitaciones! !!Hotel methodsFor: 'accessing' stamp: 'SimonGotta 10/4/2016 01:22'!buscarHabitacionPara: cantPersonas desde: fechaInicio hasta: fechaFin	" Devolver la habitación mas económica que cumpla los requisitos. "	| habMasEconomica|	" La habitación es para canPersonas y esta libre. "	habMasEconomica := self habitaciones detect: [ :hab | (hab estadoActual = 'Libre') and: (hab capacidad = cantPersonas)] ifNone:[^ nil].			^ habMasEconomica.! !!Hotel methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!habitaciones: anObject	habitaciones := anObject! !!Hotel methodsFor: 'accessing' stamp: 'SimonGotta 9/29/2016 02:14'!coeficientes: anObject	coeficientes := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Hotel class	instanceVariableNames: ''!!Hotel class methodsFor: 'as yet unclassified' stamp: 'SimonGotta 9/30/2016 08:58'!newNombre: aString precio: anInteger coeficientes: aDictionary	^ self new nombre: aString;	precio: anInteger;	coeficientes: aDictionary ! !TestCase subclass: #HotelTest	instanceVariableNames: 'coeficientes novotel hab1 hab3 regina hab4 nh'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!HotelTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 15:10'!testBuscarHabitacionParaDesdeHasta		| habMasEconomica |		novotel agregarHabitacion: hab1.	novotel agregarHabitacion: hab3.	self assert: 2 equals: novotel habitaciones size.		habMasEconomica := (novotel buscarHabitacionPara: 1 desde: (Date newDay: 01 month: 06 year: 2016) hasta: (Date newDay: 08 month: 06 year: 2016)).	self assert: 4200 equals: (habMasEconomica costo).		regina agregarHabitacion: hab4.	self assert: 1 equals: regina habitaciones size.	habMasEconomica := (regina buscarHabitacionPara: 4 desde: (Date newDay: 01 month: 06 year: 2016) hasta: (Date newDay: 08 month: 06 year: 2016)).	self assert: 6300 equals: (habMasEconomica costo).! !!HotelTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/1/2016 18:53'!setUp	" Coeficiente Hoteles "	coeficientes := Dictionary new.	coeficientes at: 1 put: 0.75.	coeficientes at: 2 put: 0.85.	coeficientes at: 3 put: 0.9.	coeficientes at: 4 put: 1.		" Hoteles "	novotel := Hotel newNombre: 'Novotel' precio: 800 coeficientes: coeficientes. 	regina := Hotel newNombre: 'Regina' precio: 900 coeficientes: coeficientes.	nh := Hotel newNombre: 'NH' precio: 700 coeficientes: coeficientes.		" Habitaciones "	hab1 := Habitacion newCapacidad: 1.	hab3 := Habitacion newCapacidad: 3.	hab4 := Habitacion newCapacidad: 4.! !!HotelTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/3/2016 23:52'!testAgregarHabitacion	self assert: (novotel habitaciones isEmpty).	self assert: 0 equals: hab1 costo.	novotel agregarHabitacion: hab1.	self assert: 600 equals: hab1 costo.	novotel agregarHabitacion: hab3.	self assert: 2 equals: (novotel habitaciones size).		self assert: (regina habitaciones isEmpty).	regina agregarHabitacion: hab4.	self deny: (regina habitaciones isEmpty).	self assert: 1 equals: (regina habitaciones size).! !Estado subclass: #Libre	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Libre methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/26/2016 16:33'!miEstado	^'Libre'! !Object subclass: #LineaAerea	instanceVariableNames: 'linea codigoLinea coeficientes vuelos'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!LineaAerea methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!codigoLinea	^ codigoLinea! !!LineaAerea methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!codigoLinea: anObject	codigoLinea := anObject! !!LineaAerea methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!coeficientes	^ coeficientes! !!LineaAerea methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!linea	^ linea! !!LineaAerea methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!vuelos	^ vuelos! !!LineaAerea methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!vuelos: anObject	vuelos := anObject! !!LineaAerea methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!coeficientes: anObject	coeficientes := anObject! !!LineaAerea methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!linea: anObject	linea := anObject! !Object subclass: #MapaDeAsientos	instanceVariableNames: 'costos asientos'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!MapaDeAsientos methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!asientos: anObject	asientos := anObject! !!MapaDeAsientos methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!costos: anObject	costos := anObject! !!MapaDeAsientos methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!asientos	^ asientos! !!MapaDeAsientos methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:42'!costos	^ costos! !Object subclass: #Pais	instanceVariableNames: 'nombre ciudades lineasAereas'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Pais methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!nombre	^ nombre! !!Pais methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!nombre: anObject	nombre := anObject! !!Pais methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!ciudades: anObject	ciudades := anObject! !!Pais methodsFor: 'accessing' stamp: 'SimonGotta 10/2/2016 20:08'!buscarCiudad: nombreCiudad	^ self ciudades detect: [ :c | c nombre = nombreCiudad ]. ! !!Pais methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:48'!agregarCiudad: unaCiudad	ciudades add: unaCiudad ! !!Pais methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:48'!initialize	ciudades := OrderedCollection new.	lineasAereas := OrderedCollection new.! !!Pais methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!lineasAereas	^ lineasAereas! !!Pais methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:49'!agregarLineaAerea: unaLineaAerea	lineasAereas add: unaLineaAerea ! !!Pais methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!lineasAereas: anObject	lineasAereas := anObject! !!Pais methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!ciudades	^ ciudades! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pais class	instanceVariableNames: ''!!Pais class methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/1/2016 15:12'!newNombrePais: aString	^ self new nombre: aString! !TestCase subclass: #PaisTest	instanceVariableNames: 'francia paris italia roma'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!PaisTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 20:14'!setUp	francia := Pais newNombrePais: 'Francia'.	paris := Ciudad newNombre: 'Paris'.		francia agregarCiudad: paris.! !!PaisTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 20:15'!testBuscarCiudad		| unaCiudad |		unaCiudad := francia buscarCiudad: 'Paris'.	self assert: unaCiudad nombre equals: 'Paris'! !Object subclass: #Persona	instanceVariableNames: 'nombre apellido dni fechaDeNac'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Persona methodsFor: 'accessing' stamp: 'dhuertas90 9/25/2016 18:45'!dni	^ dni! !!Persona methodsFor: 'accessing' stamp: 'dhuertas90 9/25/2016 18:45'!nombre: anObject	nombre := anObject! !!Persona methodsFor: 'accessing' stamp: 'dhuertas90 9/25/2016 18:45'!fechaDeNac	^ fechaDeNac! !!Persona methodsFor: 'accessing' stamp: 'dhuertas90 9/25/2016 18:45'!dni: anObject	dni := anObject! !!Persona methodsFor: 'accessing' stamp: 'dhuertas90 9/25/2016 18:45'!fechaDeNac: anObject	fechaDeNac := anObject! !!Persona methodsFor: 'accessing' stamp: 'dhuertas90 9/25/2016 18:45'!nombre	^ nombre! !!Persona methodsFor: 'accessing' stamp: 'dhuertas90 9/25/2016 18:45'!apellido: anObject	apellido := anObject! !!Persona methodsFor: 'accessing' stamp: 'dhuertas90 9/25/2016 18:45'!apellido	^ apellido! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Persona class	instanceVariableNames: ''!!Persona class methodsFor: 'as yet unclassified' stamp: 'SimonGotta 9/30/2016 10:16'!newNombre: aString apellido: otherString dni: anInteger fechNac: aDate	^ self new nombre: aString;				apellido: otherString;				dni: anInteger;				fechaDeNac: aDate! !TestCase subclass: #PersonaTest	instanceVariableNames: 'david simon hab1 autoAvis'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!PersonaTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 19:34'!setUp	" Una persona puede buscar en el sistema pero no tiene funciones de carrito. "	simon := Persona newNombre: 'Simon' apellido: 'Gotta' dni: 32781348 fechNac: (Date newDay: 24 month: 01 year: 1987).! !Estado subclass: #Reservado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Reservado methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/26/2016 16:33'!miEstado	^'Reservado'! !Object subclass: #Servicio	instanceVariableNames: 'estado'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Servicio methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 17:16'!comprar	self estado: Comprado new! !!Servicio methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 17:17'!cancelar	self estado: Libre new! !!Servicio methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 16:35'!estado	^ estado! !!Servicio methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 16:37'!estadoActual"Devuelve un String con el Nombre del Estado actual"	^ estado miEstado! !!Servicio methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 16:37'!estado: unEstado	estado := unEstado! !!Servicio methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 17:17'!reservar	self estado: Reservado new! !!Servicio methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 17:11'!initialize	estado := Libre new! !Servicio subclass: #Asiento	instanceVariableNames: 'fila categoria letra ocupante'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Asiento methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!categoria	^ categoria! !!Asiento methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!fila	^ fila! !!Asiento methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!letra: anObject	letra := anObject! !!Asiento methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!categoria: anObject	categoria := anObject! !!Asiento methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!ocupante: anObject	ocupante := anObject! !!Asiento methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!letra	^ letra! !!Asiento methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!ocupante	^ ocupante! !!Asiento methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!fila: anObject	fila := anObject! !Servicio subclass: #Auto	instanceVariableNames: 'costo'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Auto methodsFor: 'accessing' stamp: 'SimonGotta 10/4/2016 01:12'!costoPorDias: dias	^ self costo * dias.! !!Auto methodsFor: 'accessing' stamp: 'SimonGotta 10/4/2016 01:10'!costo: anObject	costo := anObject! !!Auto methodsFor: 'accessing' stamp: 'SimonGotta 10/4/2016 01:10'!costo	^ costo! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Auto class	instanceVariableNames: ''!!Auto class methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/4/2016 01:10'!newCosto: unFloat	^super new costo: unFloat! !Servicio subclass: #Habitacion	instanceVariableNames: 'capacidad costo desde hasta'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Habitacion methodsFor: 'accessing' stamp: 'SimonGotta 10/2/2016 16:28'!hasta	^ hasta! !!Habitacion methodsFor: 'accessing' stamp: 'SimonGotta 10/3/2016 23:48'!initialize	super initialize.	costo:= 0! !!Habitacion methodsFor: 'accessing' stamp: 'SimonGotta 10/2/2016 16:28'!hasta: anObject	hasta := anObject! !!Habitacion methodsFor: 'accessing' stamp: 'SimonGotta 9/29/2016 02:16'!costo	^ costo! !!Habitacion methodsFor: 'accessing' stamp: 'SimonGotta 10/2/2016 16:28'!desde: anObject	desde := anObject! !!Habitacion methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:00'!capacidad: anObject	capacidad := anObject! !!Habitacion methodsFor: 'accessing' stamp: 'SimonGotta 10/2/2016 16:28'!desde	^ desde! !!Habitacion methodsFor: 'accessing' stamp: 'SimonGotta 9/29/2016 02:16'!costo: anObject	costo := anObject! !!Habitacion methodsFor: 'accessing' stamp: 'SimonGotta 9/30/2016 09:00'!capacidad	^ capacidad! !!Habitacion methodsFor: 'accessing' stamp: 'SimonGotta 10/4/2016 00:27'!costoPorDias: dias	^ self costo * dias.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Habitacion class	instanceVariableNames: ''!!Habitacion class methodsFor: 'as yet unclassified' stamp: 'SimonGotta 9/30/2016 09:00'!newCapacidad: anInteger	^ self new capacidad: anInteger! !Object subclass: #Sistema	instanceVariableNames: 'buscador usuarios paises'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Sistema methodsFor: 'initialize-release' stamp: 'SimonGotta 10/1/2016 15:13'!initialize	usuarios := OrderedCollection new.	paises := OrderedCollection new.	buscador := nil.! !!Sistema methodsFor: 'accessing' stamp: 'dhuertas90 9/24/2016 18:10'!usuarios	^usuarios! !!Sistema methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!usuarios: anObject	usuarios := anObject! !!Sistema methodsFor: 'accessing' stamp: 'dhuertas90 9/24/2016 18:11'!buscador	^buscador! !!Sistema methodsFor: 'accessing' stamp: 'SimonGotta 10/1/2016 15:06'!paises: anObject	paises := anObject! !!Sistema methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:43'!buscador: anObject	buscador := anObject! !!Sistema methodsFor: 'accessing' stamp: 'SimonGotta 10/1/2016 15:06'!paises	^ paises! !!Sistema methodsFor: 'actions' stamp: 'SimonGotta 10/1/2016 15:07'!agregarPais: unPais	paises add: unPais! !!Sistema methodsFor: 'actions' stamp: 'SimonGotta 10/2/2016 20:59'!buscarHotelEn: nombreCiudad desde: fechaEntrada hasta: fechaSalida cantidad: cantPersonas		| pais |		pais := paises detect: [ :p | (p buscarCiudad: nombreCiudad) nombre = nombreCiudad ].	buscador := BuscadorHoteles enPais: pais.		buscador buscarHotelEn: nombreCiudad desde: fechaEntrada hasta: fechaSalida para: cantPersonas.! !!Sistema methodsFor: 'actions' stamp: 'SimonGotta 10/1/2016 18:36'!eliminarUsuario: unUsuario	usuarios remove: unUsuario ! !!Sistema methodsFor: 'actions' stamp: 'dhuertas90 9/25/2016 18:32'!log: unUsuario|usu|		usu := self usuarios detect: [ :u | u igualA: unUsuario ] ifNone: [ nil ].	usu 		ifNotNil: [usu carrito 							ifNil: [ usu carrito: (Carrito new) ].				^true ]		ifNil: [ ^false ].! !!Sistema methodsFor: 'actions' stamp: 'SimonGotta 10/1/2016 18:36'!eliminarPais: unPais	paises remove: unPais! !!Sistema methodsFor: 'actions' stamp: 'SimonGotta 10/4/2016 00:56'!buscarAutoEn: unaCiudad desde: fechaInicial hasta: fechaFinal	| pais |		pais := paises detect: [ :p | (p buscarCiudad: unaCiudad) nombre = unaCiudad ].	buscador := BuscadorAutos enPais: pais.		buscador buscarAutoEn: unaCiudad desde: fechaInicial hasta: fechaFinal.! !!Sistema methodsFor: 'actions' stamp: 'SimonGotta 9/30/2016 12:55'!agregarUsuario: unUsuario	usuarios add: unUsuario ! !TestCase subclass: #SistemaTest	instanceVariableNames: 'novotel regina nh hab1 hab3 hab4 francia italia paris roma avis europcar autoAvis autoEuropcar david carritoDavid simon sys'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!SistemaTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/4/2016 01:29'!testBuscarHotelEnDesdeHastaCantidad	"busca un hotel en determinada ciudad, durante un periodo de tiempo, para una cantidad de personas.Devuelve la habitacion disponible mas economica.De no haber habitacion disponible, devolvera distintas opciones (habitaciones) dentro del mismo hotel."	sys buscarHotelEn: 'Paris' desde: (Date newDay: 01 month: 06 year: 2016) hasta: (Date newDay: 08 month: 06 year: 2016) cantidad: 1.	self assert: 4200 equals: (sys buscador resultados at: 'Novotel') costo.		sys buscarHotelEn: 'Paris' desde: (Date newDay: 01 month: 06 year: 2016) hasta: (Date newDay: 08 month: 06 year: 2016) cantidad: 4.	self assert: 6300 equals: (sys buscador resultados at: 'Regina') costo.				! !!SistemaTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/4/2016 00:55'!testBuscarAutoEnDesdeHasta	sys buscarAutoEn: 'Paris' desde: (Date newDay: 01 month: 06 year: 2016) hasta: (Date newDay: 08 month: 06 year: 2016).	self assert: 7000 equals: (sys buscador resultados at: 'Avis') costo.! !!SistemaTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/1/2016 18:38'!testLog	sys agregarUsuario: david.	self assert: 1 equals: sys usuarios size.	self assert: (sys log: david).		sys eliminarUsuario: david.	self assert: sys usuarios isEmpty.	self deny: (sys log: david).! !!SistemaTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 20:05'!testAgregarPais	sys agregarPais: francia.	sys agregarPais: italia.	" Se cargaron dos paises en el setUP. "	self assert: 4 equals: sys paises size.! !!SistemaTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/4/2016 01:11'!setUp	| coeficientes |	" Paises - Ciudades "	francia := Pais newNombrePais: 'Francia'.	paris := Ciudad newNombre: 'Paris'.	francia agregarCiudad: paris.	italia := Pais newNombrePais: 'Italia'.	roma := Ciudad newNombre: 'Roma'.	italia agregarCiudad: roma.		" Hoteles - Habitaciones "	coeficientes := Dictionary new.	coeficientes at: 1 put: 0.75.	coeficientes at: 2 put: 0.85.	coeficientes at: 3 put: 0.9.	coeficientes at: 4 put: 1.	novotel := Hotel newNombre: 'Novotel' precio: 800 coeficientes: coeficientes. 	regina := Hotel newNombre: 'Regina' precio: 900 coeficientes: coeficientes.	nh := Hotel newNombre: 'NH' precio: 700 coeficientes: coeficientes.	hab1 := Habitacion newCapacidad: 1.	hab3 := Habitacion newCapacidad: 3.	hab4 := Habitacion newCapacidad: 4.	novotel agregarHabitacion: hab1.	novotel agregarHabitacion: hab3.	regina agregarHabitacion: hab4.	paris agregarHotel: novotel.	paris agregarHotel: regina.	roma agregarHotel: nh.		" Compañias de autos - Autos "	avis := CompaniaAutos newNombre: 'Avis'.	autoAvis := Auto newCosto: 1000.	avis agregarAuto: autoAvis.	paris agregarCompaniaAutos: avis.	europcar := CompaniaAutos newNombre: 'Europcar'.	autoEuropcar := Auto newCosto: 800.	europcar agregarAuto: autoEuropcar.	paris agregarCompaniaAutos: europcar.		" Usuario "	david := Usuario		newNombre: 'David'		apellido: 'Huertas'		dni: 35610953		fechNac: (Date newDay: 21 month: 12 year: 1990)		nombreUsuario: 'dh'		contrasena: '1234'.			" Persona "	simon := Persona		newNombre: 'Simon'		apellido: 'Gotta'		dni: 32781348		fechNac: (Date newDay: 24 month: 01 year: 1987).			" Sistema "	sys := Sistema new.	sys agregarPais: francia.	sys agregarPais: italia.	! !Persona subclass: #Usuario	instanceVariableNames: 'nombreUsuario contrasena carrito'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Usuario methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/25/2016 18:09'!carrito	^carrito! !!Usuario methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/26/2016 17:00'!initialize	carrito := Carrito new! !!Usuario methodsFor: 'as yet unclassified' stamp: 'SimonGotta 9/30/2016 10:53'!cancelarServicio: unServicio	unServicio cancelar.	self carrito eliminarServicio: unServicio! !!Usuario methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/25/2016 18:03'!nombreUsuario: unString	nombreUsuario := unString! !!Usuario methodsFor: 'as yet unclassified' stamp: 'SimonGotta 9/30/2016 10:48'!agregarCarrito: unServicio	unServicio reservar.	self carrito agregarServicio: unServicio.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/28/2016 21:28'!contrasena	^contrasena! !!Usuario methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/28/2016 18:47'!compras: unInteger	self carrito compras: (self carrito compras + unInteger).	Transcript show: self carrito compras.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/28/2016 21:28'!contrasena: unString	contrasena := unString! !!Usuario methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/25/2016 18:02'!nombreUsuario	^nombreUsuario ! !!Usuario methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/26/2016 17:25'!comprar	self carrito servicios do: [ :s | s comprar ].	self compras: self carrito servicios size.	self carrito servicios: OrderedCollection new. "vacio el carrito porque ya compré"! !!Usuario methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/25/2016 18:09'!carrito: unCarrito	carrito := unCarrito! !!Usuario methodsFor: 'as yet unclassified' stamp: 'dhuertas90 9/28/2016 21:28'!igualA: unUsuario	^(self nombreUsuario = unUsuario nombreUsuario ) and:  (self contrasena = unUsuario contrasena)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'as yet unclassified' stamp: 'SimonGotta 9/30/2016 10:20'!newNombre: aString apellido: otherString dni: anInteger fechNac: aDate nombreUsuario: aNameUser contrasena: aPassword	"ESTA MAL. FALTA CORREGIR!!!!"	^ (super newNombre: aString apellido: otherString dni: anInteger fechNac: aDate) nombreUsuario: aNameUser; contrasena: aPassword ! !TestCase subclass: #UsuarioTest	instanceVariableNames: 'david simon hab1 autoAvis'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!UsuarioTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 19:32'!testAgregarCarrito		david agregarCarrito: hab1.	self assert: hab1 estadoActual equals: 'Reservado'.	self assert: 1 equals: david carrito servicios size.	self assert: hab1 equals: david carrito servicios first.! !!UsuarioTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 19:32'!testCancelarServicio		david agregarCarrito: hab1.	self assert: 1 equals: david carrito servicios size.	david cancelarServicio: hab1.	self assert: david carrito servicios isEmpty.	self assert: hab1 estadoActual equals: 'Libre'.! !!UsuarioTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 19:33'!testComprar	david agregarCarrito: hab1.	david agregarCarrito: autoAvis.	self assert: 2 equals: david carrito servicios size.	david comprar.	self assert: david carrito servicios isEmpty.	self assert: hab1 estadoActual equals: 'Comprado'.	self assert: autoAvis estadoActual equals: 'Comprado'.! !!UsuarioTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 19:33'!testIgualA	| david2 |		david2 := david.	self assert: (david igualA: david2).! !!UsuarioTest methodsFor: 'as yet unclassified' stamp: 'SimonGotta 10/2/2016 19:32'!setUp	" Usuarios "	david := Usuario newNombre: 'David' apellido: 'Huertas' dni: 35610953 fechNac: (Date newDay: 21 month: 12 year: 1990) nombreUsuario: 'dh' contrasena: '1234'.	" Persona "	simon := Persona newNombre: 'Simon' apellido: 'Gotta' dni: 32781348 fechNac: (Date newDay: 24 month: 01 year: 1987).		" Servicios "	hab1 := Habitacion newCapacidad: 1.	autoAvis := Auto newPrecio: 1000.! !Object subclass: #Vuelo	instanceVariableNames: 'codigo origen destino avion combinaciones'	classVariableNames: ''	poolDictionaries: ''	category: 'Servicios-Turisticos'!!Vuelo methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:44'!destino: anObject	destino := anObject! !!Vuelo methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:44'!origen: anObject	origen := anObject! !!Vuelo methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:44'!avion: anObject	avion := anObject! !!Vuelo methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:44'!destino	^ destino! !!Vuelo methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:44'!codigo	^ codigo! !!Vuelo methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:44'!avion	^ avion! !!Vuelo methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:44'!combinaciones: anObject	combinaciones := anObject! !!Vuelo methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:44'!origen	^ origen! !!Vuelo methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:44'!combinaciones	^ combinaciones! !!Vuelo methodsFor: 'accessing' stamp: 'dhuertas90 9/26/2016 15:44'!codigo: anObject	codigo := anObject! !